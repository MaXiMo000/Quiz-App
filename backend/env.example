# ===========================================
# QUIZ APP BACKEND - PRODUCTION ENVIRONMENT
# ===========================================

# ===========================================
# SERVER CONFIGURATION
# ===========================================
NODE_ENV=production
PORT=4000

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# MongoDB Atlas connection string
MONGO_URI=mongodb+srv://username:password@cluster.mongodb.net/quizapp?retryWrites=true&w=majority

# ===========================================
# REDIS CONFIGURATION (Required for Caching)
# ===========================================
# For Render: Use your Redis service connection details
REDIS_HOST=your-redis-host
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password
REDIS_DB=0

# ===========================================
# JWT CONFIGURATION
# ===========================================
# Generate a strong secret key (32+ characters)
JWT_SECRET=your-super-secret-jwt-key-here-make-it-very-long-and-random

# ===========================================
# GOOGLE OAUTH CONFIGURATION
# ===========================================
# Get these from Google Cloud Console
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_SECRET=your-google-secret-for-sessions

# ===========================================
# FRONTEND CONFIGURATION
# ===========================================
# Your frontend URL (for CORS)
FRONTEND_URL=https://your-frontend-domain.com

# ===========================================
# LOGGING CONFIGURATION
# ===========================================
# Log level: error, warn, info, http, debug
LOG_LEVEL=info

# Enable file logging in production (optional)
# Set to 'true' only if you have persistent storage
ENABLE_FILE_LOGGING=false

# ===========================================
# AI SERVICES CONFIGURATION
# ===========================================
# OpenAI API Key (for AI features)
OPENAI_API_KEY=your-openai-api-key

# Google Gemini API Key (for AI Study Buddy)
GEMINI_API_KEY=your-gemini-api-key

# Together AI API Key (for AI features)
TOGETHER_API_KEY=your-together-api-key

# ===========================================
# EMAIL CONFIGURATION
# ===========================================
# EmailJS configuration
EMAILJS_SERVICE_ID=your-emailjs-service-id
EMAILJS_TEMPLATE_ID=your-emailjs-template-id
EMAILJS_PUBLIC_KEY=your-emailjs-public-key

# ===========================================
# SECURITY CONFIGURATION
# ===========================================
# Rate limiting (requests per window)
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Auth rate limiting
AUTH_RATE_LIMIT_WINDOW_MS=900000
AUTH_RATE_LIMIT_MAX_REQUESTS=10

# ===========================================
# CACHE CONFIGURATION
# ===========================================
# Default cache TTL in seconds
DEFAULT_CACHE_TTL=300

# Cache TTL for different endpoints
QUIZ_CACHE_TTL=300
ANALYTICS_CACHE_TTL=180
DASHBOARD_CACHE_TTL=300
SOCIAL_CACHE_TTL=180

# ===========================================
# PERFORMANCE CONFIGURATION
# ===========================================
# Request timeout in milliseconds
REQUEST_TIMEOUT=30000

# Maximum request body size
MAX_REQUEST_SIZE=10mb

# ===========================================
# MONITORING CONFIGURATION
# ===========================================
# Enable performance monitoring
ENABLE_PERFORMANCE_MONITORING=true

# Enable security monitoring
ENABLE_SECURITY_MONITORING=true

# ===========================================
# DEVELOPMENT CONFIGURATION
# ===========================================
# Enable debug routes (set to false in production)
ENABLE_DEBUG_ROUTES=false

# Enable CORS debug (set to false in production)
ENABLE_CORS_DEBUG=false

# ===========================================
# RENDER DEPLOYMENT NOTES
# ===========================================
# 1. Add Redis service to your Render project
# 2. Set all environment variables in Render dashboard
# 3. Make sure FRONTEND_URL matches your deployed frontend
# 4. Use strong, unique secrets for JWT_SECRET and GOOGLE_SECRET
# 5. Test Redis connection after deployment
# 6. Monitor logs in Render dashboard
